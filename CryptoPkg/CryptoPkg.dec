## @file
#  Package for cryptography modules.
#
#  This Package provides cryptographic-related libraries for UEFI security modules.
#  It also provides a test application to test libraries.
#
#  Copyright (c) 2009 - 2020, Intel Corporation. All rights reserved.<BR>
#  SPDX-License-Identifier: BSD-2-Clause-Patent
#
##

[Defines]
  DEC_SPECIFICATION              = 0x00010005
  PACKAGE_NAME                   = CryptoPkg
  PACKAGE_UNI_FILE               = CryptoPkg.uni
  PACKAGE_GUID                   = 36470E80-36F2-4ba0-8CC8-937C7D9FF888
  PACKAGE_VERSION                = 0.98

[Includes]
  Include

[LibraryClasses]
  ##  @libraryclass  Provides basic library functions for cryptographic primitives.
  ##
  BaseCryptLib|Include/Library/BaseCryptLib.h

  ##  @libraryclass  Provides TLS library functions for EFI TLS protocol.
  ##
  TlsLib|Include/Library/TlsLib.h

  ##  @libraryclass  Provides Unified API for different hash implementations.
  #
  HashApiLib|Include/Library/HashApiLib.h

  ##  @libraryclass  Provides HmacSha1 functionality
  #
  HmacSha1Lib|Include/Library/HmacSha1Lib.h

[Protocols]
  ## EDK II Crypto DXE protocol
  # 2C2275C9-3A7B-426F-BE54-2D22BD9D1092
  gEdkiiCryptoProtocolGuid =  { 0x2C2275C9, 0x3A7B, 0x426F, { 0xBE, 0x54, 0x2D, 0x22, 0xBD, 0x9D, 0x10, 0x92 }}

  ## EDK II Crypto SMM protocol
  # F46B2EB2-E0D7-4C96-A3B1-CB7C572EB300
  gEdkiiSmmCryptoProtocolGuid =  { 0xF46B2EB2, 0xE0D7, 0x4C96, { 0xA3, 0xB1, 0xc, 0x61, 0xbb, 0x24, 0x5c, 0x42 }}

[Ppis]
  ## EDK II Crypto PPI
  # 7DCE671B-C223-446A-A705-ED637AAF6771
  gEdkiiCryptoPpiGuid =  { 0x7DCE671B, 0xC223, 0x446A, { 0xA7, 0x05, 0xED, 0x63, 0x7A, 0xAF, 0x67, 0x71 }}

[Guids]
  ## Crypto package token space guid.
  gEfiCryptoPkgTokenSpaceGuid      = { 0x6bd7de60, 0x9ef7, 0x4899, { 0x97, 0xd0, 0xab, 0xff, 0xfd, 0xe9, 0x70, 0xf2 } }

# MU_CHANGE [BEGIN]
# ****************************************************************************
# AUTOGENERATED BY CryptoBinPkg\Driver\Packaging\generate_cryptodriver.py
# AUTOGENED AS temp_crypto_pcd.inc.dec
# DO NOT MODIFY
# GENERATED ON: 2024-03-08 19:11:45.603035

[PcdsFixedAtBuild]
# HMACSHA256
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha256New|FALSE|BOOLEAN|0x3
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha256Free|FALSE|BOOLEAN|0x4
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha256SetKey|FALSE|BOOLEAN|0x5
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha256Duplicate|FALSE|BOOLEAN|0x6
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha256Update|FALSE|BOOLEAN|0x7
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha256Final|FALSE|BOOLEAN|0x8
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha256All|FALSE|BOOLEAN|0x9
# HMACSHA384
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha384New|FALSE|BOOLEAN|0xa
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha384Free|FALSE|BOOLEAN|0xb
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha384SetKey|FALSE|BOOLEAN|0xc
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha384Duplicate|FALSE|BOOLEAN|0xd
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha384Update|FALSE|BOOLEAN|0xe
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha384Final|FALSE|BOOLEAN|0xf
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHmacSha384All|FALSE|BOOLEAN|0x10
# PKCS
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServicePkcs5HashPassword|FALSE|BOOLEAN|0x11
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServicePkcs1v2Encrypt|FALSE|BOOLEAN|0x12
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServicePkcs1v2Decrypt|FALSE|BOOLEAN|0x13
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServicePkcs7GetSigners|FALSE|BOOLEAN|0x14
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServicePkcs7FreeSigners|FALSE|BOOLEAN|0x15
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServicePkcs7GetCertificatesList|FALSE|BOOLEAN|0x16
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServicePkcs7Sign|FALSE|BOOLEAN|0x17
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServicePkcs7Verify|FALSE|BOOLEAN|0x18
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceVerifyEKUsInPkcs7Signature|FALSE|BOOLEAN|0x19
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServicePkcs7GetAttachedContent|FALSE|BOOLEAN|0x1a
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceAuthenticodeVerify|FALSE|BOOLEAN|0x1b
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceImageTimestampVerify|FALSE|BOOLEAN|0x1c
# DH
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceDhNew|FALSE|BOOLEAN|0x1d
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceDhFree|FALSE|BOOLEAN|0x1e
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceDhGenerateParameter|FALSE|BOOLEAN|0x1f
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceDhSetParameter|FALSE|BOOLEAN|0x20
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceDhGenerateKey|FALSE|BOOLEAN|0x21
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceDhComputeKey|FALSE|BOOLEAN|0x22
# RANDOM
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRandomSeed|FALSE|BOOLEAN|0x23
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRandomBytes|FALSE|BOOLEAN|0x24
# RSA
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaNew|FALSE|BOOLEAN|0x25
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaFree|FALSE|BOOLEAN|0x26
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaSetKey|FALSE|BOOLEAN|0x27
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaGetKey|FALSE|BOOLEAN|0x28
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaGenerateKey|FALSE|BOOLEAN|0x29
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaCheckKey|FALSE|BOOLEAN|0x2a
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaPkcs1Sign|FALSE|BOOLEAN|0x2b
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaPkcs1Verify|FALSE|BOOLEAN|0x2c
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaPssSign|FALSE|BOOLEAN|0x2d
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaPssVerify|FALSE|BOOLEAN|0x2e
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaGetPrivateKeyFromPem|FALSE|BOOLEAN|0x2f
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaGetPublicKeyFromX509|FALSE|BOOLEAN|0x30
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaOaepEncrypt|FALSE|BOOLEAN|0x31
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceRsaOaepDecrypt|FALSE|BOOLEAN|0x32
# SHA1
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha1GetContextSize|FALSE|BOOLEAN|0x33
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha1Init|FALSE|BOOLEAN|0x34
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha1Duplicate|FALSE|BOOLEAN|0x35
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha1Update|FALSE|BOOLEAN|0x36
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha1Final|FALSE|BOOLEAN|0x37
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha1HashAll|FALSE|BOOLEAN|0x38
# SHA256
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha256GetContextSize|FALSE|BOOLEAN|0x39
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha256Init|FALSE|BOOLEAN|0x3a
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha256Duplicate|FALSE|BOOLEAN|0x3b
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha256Update|FALSE|BOOLEAN|0x3c
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha256Final|FALSE|BOOLEAN|0x3d
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha256HashAll|FALSE|BOOLEAN|0x3e
# SHA384
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha384GetContextSize|FALSE|BOOLEAN|0x3f
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha384Init|FALSE|BOOLEAN|0x40
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha384Duplicate|FALSE|BOOLEAN|0x41
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha384Update|FALSE|BOOLEAN|0x42
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha384Final|FALSE|BOOLEAN|0x43
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha384HashAll|FALSE|BOOLEAN|0x44
# SHA512
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha512GetContextSize|FALSE|BOOLEAN|0x45
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha512Init|FALSE|BOOLEAN|0x46
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha512Duplicate|FALSE|BOOLEAN|0x47
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha512Update|FALSE|BOOLEAN|0x48
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha512Final|FALSE|BOOLEAN|0x49
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSha512HashAll|FALSE|BOOLEAN|0x4a
# PARALLELHASH256
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceParallelHash256HashAll|FALSE|BOOLEAN|0x4b
# AEADAESGCM
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceAeadAesGcmEncrypt|FALSE|BOOLEAN|0x4c
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceAeadAesGcmDecrypt|FALSE|BOOLEAN|0x4d
# X509
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetSubjectName|FALSE|BOOLEAN|0x4e
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetCommonName|FALSE|BOOLEAN|0x4f
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetOrganizationName|FALSE|BOOLEAN|0x50
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509VerifyCert|FALSE|BOOLEAN|0x51
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509ConstructCertificate|FALSE|BOOLEAN|0x52
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509ConstructCertificateStackV|FALSE|BOOLEAN|0x53
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509ConstructCertificateStack|FALSE|BOOLEAN|0x54
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509Free|FALSE|BOOLEAN|0x55
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509StackFree|FALSE|BOOLEAN|0x56
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetTBSCert|FALSE|BOOLEAN|0x57
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetVersion|FALSE|BOOLEAN|0x58
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetSerialNumber|FALSE|BOOLEAN|0x59
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetIssuerName|FALSE|BOOLEAN|0x5a
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetSignatureAlgorithm|FALSE|BOOLEAN|0x5b
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetExtensionData|FALSE|BOOLEAN|0x5c
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetValidity|FALSE|BOOLEAN|0x5d
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509FormatDateTime|FALSE|BOOLEAN|0x5e
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetKeyUsage|FALSE|BOOLEAN|0x5f
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetExtendedKeyUsage|FALSE|BOOLEAN|0x60
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509VerifyCertChain|FALSE|BOOLEAN|0x61
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetCertFromCertChain|FALSE|BOOLEAN|0x62
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceX509GetExtendedBasicConstraints|FALSE|BOOLEAN|0x63
# ASN1
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceAsn1GetTag|FALSE|BOOLEAN|0x64
# BIGNUM
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumInit|FALSE|BOOLEAN|0x65
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumFromBin|FALSE|BOOLEAN|0x66
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumToBin|FALSE|BOOLEAN|0x67
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumFree|FALSE|BOOLEAN|0x68
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumAdd|FALSE|BOOLEAN|0x69
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumSub|FALSE|BOOLEAN|0x6a
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumMod|FALSE|BOOLEAN|0x6b
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumExpMod|FALSE|BOOLEAN|0x6c
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumInverseMod|FALSE|BOOLEAN|0x6d
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumDiv|FALSE|BOOLEAN|0x6e
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumMulMod|FALSE|BOOLEAN|0x6f
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumCmp|FALSE|BOOLEAN|0x70
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumBits|FALSE|BOOLEAN|0x71
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumBytes|FALSE|BOOLEAN|0x72
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumIsWord|FALSE|BOOLEAN|0x73
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumIsOdd|FALSE|BOOLEAN|0x74
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumCopy|FALSE|BOOLEAN|0x75
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumRShift|FALSE|BOOLEAN|0x76
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumConstTime|FALSE|BOOLEAN|0x77
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumSqrMod|FALSE|BOOLEAN|0x78
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumNewContext|FALSE|BOOLEAN|0x79
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumContextFree|FALSE|BOOLEAN|0x7a
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumSetUint|FALSE|BOOLEAN|0x7b
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceBigNumAddMod|FALSE|BOOLEAN|0x7c
# TDES
# AES
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceAesGetContextSize|FALSE|BOOLEAN|0x7d
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceAesInit|FALSE|BOOLEAN|0x7e
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceAesCbcEncrypt|FALSE|BOOLEAN|0x7f
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceAesCbcDecrypt|FALSE|BOOLEAN|0x80
# ARC4
# SM3
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSm3GetContextSize|FALSE|BOOLEAN|0x81
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSm3Init|FALSE|BOOLEAN|0x82
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSm3Duplicate|FALSE|BOOLEAN|0x83
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSm3Update|FALSE|BOOLEAN|0x84
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSm3Final|FALSE|BOOLEAN|0x85
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceSm3HashAll|FALSE|BOOLEAN|0x86
# HKDF
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHkdfSha256ExtractAndExpand|FALSE|BOOLEAN|0x87
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHkdfSha256Extract|FALSE|BOOLEAN|0x88
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHkdfSha256Expand|FALSE|BOOLEAN|0x89
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHkdfSha384ExtractAndExpand|FALSE|BOOLEAN|0x8a
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHkdfSha384Extract|FALSE|BOOLEAN|0x8b
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceHkdfSha384Expand|FALSE|BOOLEAN|0x8c
# TLS
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsInitialize|FALSE|BOOLEAN|0x8d
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsCtxFree|FALSE|BOOLEAN|0x8e
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsCtxNew|FALSE|BOOLEAN|0x8f
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsFree|FALSE|BOOLEAN|0x90
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsNew|FALSE|BOOLEAN|0x91
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsInHandshake|FALSE|BOOLEAN|0x92
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsDoHandshake|FALSE|BOOLEAN|0x93
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsHandleAlert|FALSE|BOOLEAN|0x94
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsCloseNotify|FALSE|BOOLEAN|0x95
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsCtrlTrafficOut|FALSE|BOOLEAN|0x96
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsCtrlTrafficIn|FALSE|BOOLEAN|0x97
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsRead|FALSE|BOOLEAN|0x98
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsWrite|FALSE|BOOLEAN|0x99
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsShutdown|FALSE|BOOLEAN|0x9a
# TLSSET
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetVersion|FALSE|BOOLEAN|0x9b
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetConnectionEnd|FALSE|BOOLEAN|0x9c
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetCipherList|FALSE|BOOLEAN|0x9d
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetCompressionMethod|FALSE|BOOLEAN|0x9e
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetVerify|FALSE|BOOLEAN|0x9f
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetVerifyHost|FALSE|BOOLEAN|0xa0
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetSessionId|FALSE|BOOLEAN|0xa1
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetCaCertificate|FALSE|BOOLEAN|0xa2
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetHostPublicCert|FALSE|BOOLEAN|0xa3
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetHostPrivateKeyEx|FALSE|BOOLEAN|0xa4
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetHostPrivateKey|FALSE|BOOLEAN|0xa5
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetCertRevocationList|FALSE|BOOLEAN|0xa6
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetSignatureAlgoList|FALSE|BOOLEAN|0xa7
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsSetEcCurve|FALSE|BOOLEAN|0xa8
# TLSGET
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetVersion|FALSE|BOOLEAN|0xa9
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetConnectionEnd|FALSE|BOOLEAN|0xaa
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetCurrentCipher|FALSE|BOOLEAN|0xab
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetCurrentCompressionId|FALSE|BOOLEAN|0xac
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetVerify|FALSE|BOOLEAN|0xad
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetSessionId|FALSE|BOOLEAN|0xae
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetClientRandom|FALSE|BOOLEAN|0xaf
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetServerRandom|FALSE|BOOLEAN|0xb0
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetKeyMaterial|FALSE|BOOLEAN|0xb1
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetCaCertificate|FALSE|BOOLEAN|0xb2
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetHostPublicCert|FALSE|BOOLEAN|0xb3
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetHostPrivateKey|FALSE|BOOLEAN|0xb4
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetCertRevocationList|FALSE|BOOLEAN|0xb5
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceTlsGetExportKey|FALSE|BOOLEAN|0xb6
# EC
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcGroupInit|FALSE|BOOLEAN|0xb7
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcGroupGetCurve|FALSE|BOOLEAN|0xb8
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcGroupGetOrder|FALSE|BOOLEAN|0xb9
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcGroupFree|FALSE|BOOLEAN|0xba
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcPointInit|FALSE|BOOLEAN|0xbb
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcPointDeInit|FALSE|BOOLEAN|0xbc
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcPointGetAffineCoordinates|FALSE|BOOLEAN|0xbd
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcPointSetAffineCoordinates|FALSE|BOOLEAN|0xbe
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcPointAdd|FALSE|BOOLEAN|0xbf
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcPointMul|FALSE|BOOLEAN|0xc0
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcPointInvert|FALSE|BOOLEAN|0xc1
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcPointIsOnCurve|FALSE|BOOLEAN|0xc2
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcPointIsAtInfinity|FALSE|BOOLEAN|0xc3
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcPointEqual|FALSE|BOOLEAN|0xc4
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcPointSetCompressedCoordinates|FALSE|BOOLEAN|0xc5
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcNewByNid|FALSE|BOOLEAN|0xc6
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcFree|FALSE|BOOLEAN|0xc7
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcGenerateKey|FALSE|BOOLEAN|0xc8
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcGetPubKey|FALSE|BOOLEAN|0xc9
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcDhComputeKey|FALSE|BOOLEAN|0xca
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcGetPrivateKeyFromPem|FALSE|BOOLEAN|0xcb
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcGetPublicKeyFromX509|FALSE|BOOLEAN|0xcc
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcDsaSign|FALSE|BOOLEAN|0xcd
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceEcDsaVerify|FALSE|BOOLEAN|0xce
# AUTOGEN ENDS
# ****************************************************************************
# MU_CHANGE [END]

[PcdsFixedAtBuild]
  ## Enable/Disable the families and individual services produced by the
  #  EDK II Crypto Protocols/PPIs.  The default is all services disabled.
  #  This Structured PCD is associated with PCD_CRYPTO_SERVICE_FAMILY_ENABLE
  #  structure that is defined in Include/Pcd/PcdCryptoServiceFamilyEnable.h.
  # @Prompt Enable/Disable EDK II Crypto Protocol/PPI services
  gEfiCryptoPkgTokenSpaceGuid.PcdCryptoServiceFamilyEnable|{0x00}|PCD_CRYPTO_SERVICE_FAMILY_ENABLE|0x00000002 {
    <Packages>
      CryptoPkg/CryptoPkg.dec
    <HeaderFiles>
      Pcd/PcdCryptoServiceFamilyEnable.h
  }

  ## This PCD indicates the HASH algorithm to calculate hash of data
  #  Based on the value set, the required algorithm is chosen to calculate
  #  the hash of data.<BR>
  #  The default hashing algorithm for BaseHashApiLib is set to SHA256.<BR>
  #     0x00000001    - HASH_ALG_SHA1.<BR>
  #     0x00000002    - HASH_ALG_SHA256.<BR>
  #     0x00000004    - HASH_ALG_SHA384.<BR>
  #     0x00000008    - HASH_ALG_SHA512.<BR>
  #     0x00000010    - HASH_ALG_SM3_256.<BR>
  # @Prompt Set policy for hashing unsigned image for Secure Boot.
  # @ValidList 0x80000001 | 0x00000001, 0x00000002, 0x00000004, 0x00000008, 0x00000010
  gEfiCryptoPkgTokenSpaceGuid.PcdHashApiLibPolicy|0x00000002|UINT32|0x00000001

[UserExtensions.TianoCore."ExtraFiles"]
  CryptoPkgExtra.uni
